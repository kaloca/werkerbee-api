"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = require("express");
var _AuthMiddleware = require("../../middlewares/AuthMiddleware");
var _controllers = _interopRequireDefault(require("../../controllers"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var JobPostingRouter = (0, _express.Router)();
JobPostingRouter.post('/job-post', _AuthMiddleware.requireAuth, _controllers["default"].JobPostingController.createJobPosting);
JobPostingRouter.put('/job-post/:id', _AuthMiddleware.requireAuth, _controllers["default"].JobPostingController.updateJobPosting);
JobPostingRouter["delete"]('/job-post/:id', _AuthMiddleware.requireAuth, _controllers["default"].JobPostingController.deleteJobPosting);
JobPostingRouter.get('/job-postings', _controllers["default"].JobPostingController.getAllJobPostings);
JobPostingRouter.get('/job-postings/nearby', _controllers["default"].JobPostingController.getNearbyJobPostings);
JobPostingRouter.get('/job-post/:id/applications', _AuthMiddleware.requireAuth, _controllers["default"].JobPostingController.getJobApplications);
JobPostingRouter.get('/job-post/:id', _controllers["default"].JobPostingController.getJobPosting);
JobPostingRouter.post('/job-post/:id/apply', _AuthMiddleware.requireAuth, _controllers["default"].JobApplicationController.applyForJob);
JobPostingRouter.put('/job-application/:applicationId/status', _AuthMiddleware.requireAuth, _controllers["default"].JobApplicationController.updateStatus);
JobPostingRouter.post('/job-application/:applicationId/accept', _AuthMiddleware.requireAuth, _controllers["default"].JobApplicationController.acceptApplication);
var _default = JobPostingRouter;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfQXV0aE1pZGRsZXdhcmUiLCJfY29udHJvbGxlcnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsIkpvYlBvc3RpbmdSb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxdWlyZUF1dGgiLCJjb250cm9sbGVycyIsIkpvYlBvc3RpbmdDb250cm9sbGVyIiwiY3JlYXRlSm9iUG9zdGluZyIsInB1dCIsInVwZGF0ZUpvYlBvc3RpbmciLCJkZWxldGVKb2JQb3N0aW5nIiwiZ2V0IiwiZ2V0QWxsSm9iUG9zdGluZ3MiLCJnZXROZWFyYnlKb2JQb3N0aW5ncyIsImdldEpvYkFwcGxpY2F0aW9ucyIsImdldEpvYlBvc3RpbmciLCJKb2JBcHBsaWNhdGlvbkNvbnRyb2xsZXIiLCJhcHBseUZvckpvYiIsInVwZGF0ZVN0YXR1cyIsImFjY2VwdEFwcGxpY2F0aW9uIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwcC9yb3V0ZXMvSm9icy9Kb2JQb3N0aW5nUm91dGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5cbmltcG9ydCB7IHJlcXVpcmVBdXRoIH0gZnJvbSAnQC9hcHAvbWlkZGxld2FyZXMvQXV0aE1pZGRsZXdhcmUnXG5pbXBvcnQgY29udHJvbGxlcnMgZnJvbSAnQC9hcHAvY29udHJvbGxlcnMnXG5cbmNvbnN0IEpvYlBvc3RpbmdSb3V0ZXIgPSBSb3V0ZXIoKVxuXG5Kb2JQb3N0aW5nUm91dGVyLnBvc3QoXG5cdCcvam9iLXBvc3QnLFxuXHRyZXF1aXJlQXV0aCxcblx0Y29udHJvbGxlcnMuSm9iUG9zdGluZ0NvbnRyb2xsZXIuY3JlYXRlSm9iUG9zdGluZ1xuKVxuSm9iUG9zdGluZ1JvdXRlci5wdXQoXG5cdCcvam9iLXBvc3QvOmlkJyxcblx0cmVxdWlyZUF1dGgsXG5cdGNvbnRyb2xsZXJzLkpvYlBvc3RpbmdDb250cm9sbGVyLnVwZGF0ZUpvYlBvc3RpbmdcbilcbkpvYlBvc3RpbmdSb3V0ZXIuZGVsZXRlKFxuXHQnL2pvYi1wb3N0LzppZCcsXG5cdHJlcXVpcmVBdXRoLFxuXHRjb250cm9sbGVycy5Kb2JQb3N0aW5nQ29udHJvbGxlci5kZWxldGVKb2JQb3N0aW5nXG4pXG5Kb2JQb3N0aW5nUm91dGVyLmdldChcblx0Jy9qb2ItcG9zdGluZ3MnLFxuXHRjb250cm9sbGVycy5Kb2JQb3N0aW5nQ29udHJvbGxlci5nZXRBbGxKb2JQb3N0aW5nc1xuKVxuSm9iUG9zdGluZ1JvdXRlci5nZXQoXG5cdCcvam9iLXBvc3RpbmdzL25lYXJieScsXG5cdGNvbnRyb2xsZXJzLkpvYlBvc3RpbmdDb250cm9sbGVyLmdldE5lYXJieUpvYlBvc3RpbmdzXG4pXG5Kb2JQb3N0aW5nUm91dGVyLmdldChcblx0Jy9qb2ItcG9zdC86aWQvYXBwbGljYXRpb25zJyxcblx0cmVxdWlyZUF1dGgsXG5cdGNvbnRyb2xsZXJzLkpvYlBvc3RpbmdDb250cm9sbGVyLmdldEpvYkFwcGxpY2F0aW9uc1xuKVxuSm9iUG9zdGluZ1JvdXRlci5nZXQoXG5cdCcvam9iLXBvc3QvOmlkJyxcblx0Y29udHJvbGxlcnMuSm9iUG9zdGluZ0NvbnRyb2xsZXIuZ2V0Sm9iUG9zdGluZ1xuKVxuSm9iUG9zdGluZ1JvdXRlci5wb3N0KFxuXHQnL2pvYi1wb3N0LzppZC9hcHBseScsXG5cdHJlcXVpcmVBdXRoLFxuXHRjb250cm9sbGVycy5Kb2JBcHBsaWNhdGlvbkNvbnRyb2xsZXIuYXBwbHlGb3JKb2JcbilcbkpvYlBvc3RpbmdSb3V0ZXIucHV0KFxuXHQnL2pvYi1hcHBsaWNhdGlvbi86YXBwbGljYXRpb25JZC9zdGF0dXMnLFxuXHRyZXF1aXJlQXV0aCxcblx0Y29udHJvbGxlcnMuSm9iQXBwbGljYXRpb25Db250cm9sbGVyLnVwZGF0ZVN0YXR1c1xuKVxuSm9iUG9zdGluZ1JvdXRlci5wb3N0KFxuXHQnL2pvYi1hcHBsaWNhdGlvbi86YXBwbGljYXRpb25JZC9hY2NlcHQnLFxuXHRyZXF1aXJlQXV0aCxcblx0Y29udHJvbGxlcnMuSm9iQXBwbGljYXRpb25Db250cm9sbGVyLmFjY2VwdEFwcGxpY2F0aW9uXG4pXG5cbmV4cG9ydCBkZWZhdWx0IEpvYlBvc3RpbmdSb3V0ZXJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBQUMsZUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQTJDLFNBQUFHLHVCQUFBQyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFFM0MsSUFBTUUsZ0JBQWdCLEdBQUcsSUFBQUMsZUFBTSxFQUFDLENBQUM7QUFFakNELGdCQUFnQixDQUFDRSxJQUFJLENBQ3BCLFdBQVcsRUFDWEMsMkJBQVcsRUFDWEMsdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNDLGdCQUNsQyxDQUFDO0FBQ0ROLGdCQUFnQixDQUFDTyxHQUFHLENBQ25CLGVBQWUsRUFDZkosMkJBQVcsRUFDWEMsdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNHLGdCQUNsQyxDQUFDO0FBQ0RSLGdCQUFnQixVQUFPLENBQ3RCLGVBQWUsRUFDZkcsMkJBQVcsRUFDWEMsdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNJLGdCQUNsQyxDQUFDO0FBQ0RULGdCQUFnQixDQUFDVSxHQUFHLENBQ25CLGVBQWUsRUFDZk4sdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNNLGlCQUNsQyxDQUFDO0FBQ0RYLGdCQUFnQixDQUFDVSxHQUFHLENBQ25CLHNCQUFzQixFQUN0Qk4sdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNPLG9CQUNsQyxDQUFDO0FBQ0RaLGdCQUFnQixDQUFDVSxHQUFHLENBQ25CLDRCQUE0QixFQUM1QlAsMkJBQVcsRUFDWEMsdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNRLGtCQUNsQyxDQUFDO0FBQ0RiLGdCQUFnQixDQUFDVSxHQUFHLENBQ25CLGVBQWUsRUFDZk4sdUJBQVcsQ0FBQ0Msb0JBQW9CLENBQUNTLGFBQ2xDLENBQUM7QUFDRGQsZ0JBQWdCLENBQUNFLElBQUksQ0FDcEIscUJBQXFCLEVBQ3JCQywyQkFBVyxFQUNYQyx1QkFBVyxDQUFDVyx3QkFBd0IsQ0FBQ0MsV0FDdEMsQ0FBQztBQUNEaEIsZ0JBQWdCLENBQUNPLEdBQUcsQ0FDbkIsd0NBQXdDLEVBQ3hDSiwyQkFBVyxFQUNYQyx1QkFBVyxDQUFDVyx3QkFBd0IsQ0FBQ0UsWUFDdEMsQ0FBQztBQUNEakIsZ0JBQWdCLENBQUNFLElBQUksQ0FDcEIsd0NBQXdDLEVBQ3hDQywyQkFBVyxFQUNYQyx1QkFBVyxDQUFDVyx3QkFBd0IsQ0FBQ0csaUJBQ3RDLENBQUM7QUFBQSxJQUFBQyxRQUFBLEdBRWNuQixnQkFBZ0I7QUFBQW9CLE9BQUEsY0FBQUQsUUFBQSJ9