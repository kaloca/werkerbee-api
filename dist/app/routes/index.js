"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = require("express");
var _AuthRouter = _interopRequireDefault(require("./Auth/AuthRouter"));
var _EditWorkerRouter = _interopRequireDefault(require("./Worker/EditWorkerRouter"));
var _JobTypeRouter = _interopRequireDefault(require("./Jobs/JobTypeRouter"));
var _CompanyRouter = _interopRequireDefault(require("./Company/CompanyRouter"));
var _JobPostingRouter = _interopRequireDefault(require("./Jobs/JobPostingRouter"));
var _WorkerRouter = _interopRequireDefault(require("./Worker/WorkerRouter"));
var _JobRouter = _interopRequireDefault(require("./Jobs/JobRouter"));
var _NotificationRouter = _interopRequireDefault(require("./Notification/NotificationRouter"));
var _ImageRouter = _interopRequireDefault(require("./Image/ImageRouter"));
var _CertificationRouter = _interopRequireDefault(require("./Certification/CertificationRouter"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var routes = (0, _express.Router)();
routes.use(_AuthRouter["default"]);
routes.use(_EditWorkerRouter["default"]);
routes.use(_JobTypeRouter["default"]);
routes.use(_CompanyRouter["default"]);
routes.use(_JobPostingRouter["default"]);
routes.use(_WorkerRouter["default"]);
routes.use(_JobRouter["default"]);
routes.use(_NotificationRouter["default"]);
routes.use(_ImageRouter["default"]);
routes.use(_CertificationRouter["default"]);

// Health Check
routes.get('/', function (req, res) {
  return res.status(200).json({
    message: 'Health Check OK'
  });
});
var _default = routes;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfQXV0aFJvdXRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfRWRpdFdvcmtlclJvdXRlciIsIl9Kb2JUeXBlUm91dGVyIiwiX0NvbXBhbnlSb3V0ZXIiLCJfSm9iUG9zdGluZ1JvdXRlciIsIl9Xb3JrZXJSb3V0ZXIiLCJfSm9iUm91dGVyIiwiX05vdGlmaWNhdGlvblJvdXRlciIsIl9JbWFnZVJvdXRlciIsIl9DZXJ0aWZpY2F0aW9uUm91dGVyIiwib2JqIiwiX19lc01vZHVsZSIsInJvdXRlcyIsIlJvdXRlciIsInVzZSIsIlJlZ2lzdGVyUm91dGVyIiwiRWRpdFdvcmtlclJvdXRlciIsIkpvYlR5cGVSb3V0ZXIiLCJDb21wYW55Um91dGVyIiwiSm9iUG9zdGluZ1JvdXRlciIsIldvcmtlclJvdXRlciIsIkpvYlJvdXRlciIsIk5vdGlmaWNhdGlvblJvdXRlciIsIkltYWdlUm91dGVyIiwiQ2VydGlmaWNhdGlvblJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FwcC9yb3V0ZXMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcblxuaW1wb3J0IFJlZ2lzdGVyUm91dGVyIGZyb20gJy4vQXV0aC9BdXRoUm91dGVyJ1xuaW1wb3J0IEVkaXRXb3JrZXJSb3V0ZXIgZnJvbSAnLi9Xb3JrZXIvRWRpdFdvcmtlclJvdXRlcidcbmltcG9ydCBKb2JUeXBlUm91dGVyIGZyb20gJy4vSm9icy9Kb2JUeXBlUm91dGVyJ1xuaW1wb3J0IENvbXBhbnlSb3V0ZXIgZnJvbSAnLi9Db21wYW55L0NvbXBhbnlSb3V0ZXInXG5pbXBvcnQgSm9iUG9zdGluZ1JvdXRlciBmcm9tICcuL0pvYnMvSm9iUG9zdGluZ1JvdXRlcidcbmltcG9ydCBXb3JrZXJSb3V0ZXIgZnJvbSAnLi9Xb3JrZXIvV29ya2VyUm91dGVyJ1xuaW1wb3J0IEpvYlJvdXRlciBmcm9tICcuL0pvYnMvSm9iUm91dGVyJ1xuaW1wb3J0IE5vdGlmaWNhdGlvblJvdXRlciBmcm9tICcuL05vdGlmaWNhdGlvbi9Ob3RpZmljYXRpb25Sb3V0ZXInXG5pbXBvcnQgSW1hZ2VSb3V0ZXIgZnJvbSAnLi9JbWFnZS9JbWFnZVJvdXRlcidcbmltcG9ydCBDZXJ0aWZpY2F0aW9uUm91dGVyIGZyb20gJy4vQ2VydGlmaWNhdGlvbi9DZXJ0aWZpY2F0aW9uUm91dGVyJ1xuXG5jb25zdCByb3V0ZXMgPSBSb3V0ZXIoKVxuXG5yb3V0ZXMudXNlKFJlZ2lzdGVyUm91dGVyKVxucm91dGVzLnVzZShFZGl0V29ya2VyUm91dGVyKVxucm91dGVzLnVzZShKb2JUeXBlUm91dGVyKVxucm91dGVzLnVzZShDb21wYW55Um91dGVyKVxucm91dGVzLnVzZShKb2JQb3N0aW5nUm91dGVyKVxucm91dGVzLnVzZShXb3JrZXJSb3V0ZXIpXG5yb3V0ZXMudXNlKEpvYlJvdXRlcilcbnJvdXRlcy51c2UoTm90aWZpY2F0aW9uUm91dGVyKVxucm91dGVzLnVzZShJbWFnZVJvdXRlcilcbnJvdXRlcy51c2UoQ2VydGlmaWNhdGlvblJvdXRlcilcblxuLy8gSGVhbHRoIENoZWNrXG5yb3V0ZXMuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PlxuXHRyZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdIZWFsdGggQ2hlY2sgT0snIH0pXG4pXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlc1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxXQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxpQkFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksY0FBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssY0FBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQU0saUJBQUEsR0FBQUosc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFPLGFBQUEsR0FBQUwsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFRLFVBQUEsR0FBQU4sc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFTLG1CQUFBLEdBQUFQLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBVSxZQUFBLEdBQUFSLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBVyxvQkFBQSxHQUFBVCxzQkFBQSxDQUFBRixPQUFBO0FBQXFFLFNBQUFFLHVCQUFBVSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFFckUsSUFBTUUsTUFBTSxHQUFHLElBQUFDLGVBQU0sRUFBQyxDQUFDO0FBRXZCRCxNQUFNLENBQUNFLEdBQUcsQ0FBQ0Msc0JBQWMsQ0FBQztBQUMxQkgsTUFBTSxDQUFDRSxHQUFHLENBQUNFLDRCQUFnQixDQUFDO0FBQzVCSixNQUFNLENBQUNFLEdBQUcsQ0FBQ0cseUJBQWEsQ0FBQztBQUN6QkwsTUFBTSxDQUFDRSxHQUFHLENBQUNJLHlCQUFhLENBQUM7QUFDekJOLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDSyw0QkFBZ0IsQ0FBQztBQUM1QlAsTUFBTSxDQUFDRSxHQUFHLENBQUNNLHdCQUFZLENBQUM7QUFDeEJSLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDTyxxQkFBUyxDQUFDO0FBQ3JCVCxNQUFNLENBQUNFLEdBQUcsQ0FBQ1EsOEJBQWtCLENBQUM7QUFDOUJWLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDUyx1QkFBVyxDQUFDO0FBQ3ZCWCxNQUFNLENBQUNFLEdBQUcsQ0FBQ1UsK0JBQW1CLENBQUM7O0FBRS9CO0FBQ0FaLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDQyxHQUFHLEVBQUVDLEdBQUc7RUFBQSxPQUN4QkEsR0FBRyxDQUFDQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztJQUFFQyxPQUFPLEVBQUU7RUFBa0IsQ0FBQyxDQUFDO0FBQUEsQ0FDckQsQ0FBQztBQUFBLElBQUFDLFFBQUEsR0FFY25CLE1BQU07QUFBQW9CLE9BQUEsY0FBQUQsUUFBQSJ9