"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = require("express");
var _AuthRouter = _interopRequireDefault(require("./Auth/AuthRouter"));
var _EditWorkerRouter = _interopRequireDefault(require("./Worker/EditWorkerRouter"));
var _JobTypeRouter = _interopRequireDefault(require("./Jobs/JobTypeRouter"));
var _CompanyRouter = _interopRequireDefault(require("./Company/CompanyRouter"));
var _JobPostingRouter = _interopRequireDefault(require("./Jobs/JobPostingRouter"));
var _WorkerRouter = _interopRequireDefault(require("./Worker/WorkerRouter"));
var _JobRouter = _interopRequireDefault(require("./Jobs/JobRouter"));
var _NotificationRouter = _interopRequireDefault(require("./Notification/NotificationRouter"));
var _ImageRouter = _interopRequireDefault(require("./Image/ImageRouter"));
var _CertificationRouter = _interopRequireDefault(require("./Certification/CertificationRouter"));
var _AdminRouter = _interopRequireDefault(require("./Admin/AdminRouter"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var routes = (0, _express.Router)();
routes.use(_AuthRouter["default"]);
routes.use(_EditWorkerRouter["default"]);
routes.use(_JobTypeRouter["default"]);
routes.use(_CompanyRouter["default"]);
routes.use(_JobPostingRouter["default"]);
routes.use(_WorkerRouter["default"]);
routes.use(_JobRouter["default"]);
routes.use(_NotificationRouter["default"]);
routes.use(_ImageRouter["default"]);
routes.use(_CertificationRouter["default"]);
routes.use(_AdminRouter["default"]);

// Health Check
routes.get('/', function (req, res) {
  return res.status(200).json({
    message: 'Health Check OK'
  });
});
var _default = routes;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfQXV0aFJvdXRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfRWRpdFdvcmtlclJvdXRlciIsIl9Kb2JUeXBlUm91dGVyIiwiX0NvbXBhbnlSb3V0ZXIiLCJfSm9iUG9zdGluZ1JvdXRlciIsIl9Xb3JrZXJSb3V0ZXIiLCJfSm9iUm91dGVyIiwiX05vdGlmaWNhdGlvblJvdXRlciIsIl9JbWFnZVJvdXRlciIsIl9DZXJ0aWZpY2F0aW9uUm91dGVyIiwiX0FkbWluUm91dGVyIiwib2JqIiwiX19lc01vZHVsZSIsInJvdXRlcyIsIlJvdXRlciIsInVzZSIsIlJlZ2lzdGVyUm91dGVyIiwiRWRpdFdvcmtlclJvdXRlciIsIkpvYlR5cGVSb3V0ZXIiLCJDb21wYW55Um91dGVyIiwiSm9iUG9zdGluZ1JvdXRlciIsIldvcmtlclJvdXRlciIsIkpvYlJvdXRlciIsIk5vdGlmaWNhdGlvblJvdXRlciIsIkltYWdlUm91dGVyIiwiQ2VydGlmaWNhdGlvblJvdXRlciIsIkFkbWluUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBwL3JvdXRlcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgUmVnaXN0ZXJSb3V0ZXIgZnJvbSAnLi9BdXRoL0F1dGhSb3V0ZXInXG5pbXBvcnQgRWRpdFdvcmtlclJvdXRlciBmcm9tICcuL1dvcmtlci9FZGl0V29ya2VyUm91dGVyJ1xuaW1wb3J0IEpvYlR5cGVSb3V0ZXIgZnJvbSAnLi9Kb2JzL0pvYlR5cGVSb3V0ZXInXG5pbXBvcnQgQ29tcGFueVJvdXRlciBmcm9tICcuL0NvbXBhbnkvQ29tcGFueVJvdXRlcidcbmltcG9ydCBKb2JQb3N0aW5nUm91dGVyIGZyb20gJy4vSm9icy9Kb2JQb3N0aW5nUm91dGVyJ1xuaW1wb3J0IFdvcmtlclJvdXRlciBmcm9tICcuL1dvcmtlci9Xb3JrZXJSb3V0ZXInXG5pbXBvcnQgSm9iUm91dGVyIGZyb20gJy4vSm9icy9Kb2JSb3V0ZXInXG5pbXBvcnQgTm90aWZpY2F0aW9uUm91dGVyIGZyb20gJy4vTm90aWZpY2F0aW9uL05vdGlmaWNhdGlvblJvdXRlcidcbmltcG9ydCBJbWFnZVJvdXRlciBmcm9tICcuL0ltYWdlL0ltYWdlUm91dGVyJ1xuaW1wb3J0IENlcnRpZmljYXRpb25Sb3V0ZXIgZnJvbSAnLi9DZXJ0aWZpY2F0aW9uL0NlcnRpZmljYXRpb25Sb3V0ZXInXG5pbXBvcnQgQWRtaW5Sb3V0ZXIgZnJvbSAnLi9BZG1pbi9BZG1pblJvdXRlcidcblxuY29uc3Qgcm91dGVzID0gUm91dGVyKClcblxucm91dGVzLnVzZShSZWdpc3RlclJvdXRlcilcbnJvdXRlcy51c2UoRWRpdFdvcmtlclJvdXRlcilcbnJvdXRlcy51c2UoSm9iVHlwZVJvdXRlcilcbnJvdXRlcy51c2UoQ29tcGFueVJvdXRlcilcbnJvdXRlcy51c2UoSm9iUG9zdGluZ1JvdXRlcilcbnJvdXRlcy51c2UoV29ya2VyUm91dGVyKVxucm91dGVzLnVzZShKb2JSb3V0ZXIpXG5yb3V0ZXMudXNlKE5vdGlmaWNhdGlvblJvdXRlcilcbnJvdXRlcy51c2UoSW1hZ2VSb3V0ZXIpXG5yb3V0ZXMudXNlKENlcnRpZmljYXRpb25Sb3V0ZXIpXG5yb3V0ZXMudXNlKEFkbWluUm91dGVyKVxuXG4vLyBIZWFsdGggQ2hlY2tcbnJvdXRlcy5nZXQoJy8nLCAocmVxLCByZXMpID0+XG5cdHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogJ0hlYWx0aCBDaGVjayBPSycgfSlcbilcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVzXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUVBLElBQUFDLFdBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLGlCQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBSSxjQUFBLEdBQUFGLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBSyxjQUFBLEdBQUFILHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBTSxpQkFBQSxHQUFBSixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQU8sYUFBQSxHQUFBTCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQVEsVUFBQSxHQUFBTixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQVMsbUJBQUEsR0FBQVAsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFVLFlBQUEsR0FBQVIsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFXLG9CQUFBLEdBQUFULHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBWSxZQUFBLEdBQUFWLHNCQUFBLENBQUFGLE9BQUE7QUFBNkMsU0FBQUUsdUJBQUFXLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUU3QyxJQUFNRSxNQUFNLEdBQUcsSUFBQUMsZUFBTSxFQUFDLENBQUM7QUFFdkJELE1BQU0sQ0FBQ0UsR0FBRyxDQUFDQyxzQkFBYyxDQUFDO0FBQzFCSCxNQUFNLENBQUNFLEdBQUcsQ0FBQ0UsNEJBQWdCLENBQUM7QUFDNUJKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDRyx5QkFBYSxDQUFDO0FBQ3pCTCxNQUFNLENBQUNFLEdBQUcsQ0FBQ0kseUJBQWEsQ0FBQztBQUN6Qk4sTUFBTSxDQUFDRSxHQUFHLENBQUNLLDRCQUFnQixDQUFDO0FBQzVCUCxNQUFNLENBQUNFLEdBQUcsQ0FBQ00sd0JBQVksQ0FBQztBQUN4QlIsTUFBTSxDQUFDRSxHQUFHLENBQUNPLHFCQUFTLENBQUM7QUFDckJULE1BQU0sQ0FBQ0UsR0FBRyxDQUFDUSw4QkFBa0IsQ0FBQztBQUM5QlYsTUFBTSxDQUFDRSxHQUFHLENBQUNTLHVCQUFXLENBQUM7QUFDdkJYLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDVSwrQkFBbUIsQ0FBQztBQUMvQlosTUFBTSxDQUFDRSxHQUFHLENBQUNXLHVCQUFXLENBQUM7O0FBRXZCO0FBQ0FiLE1BQU0sQ0FBQ2MsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDQyxHQUFHLEVBQUVDLEdBQUc7RUFBQSxPQUN4QkEsR0FBRyxDQUFDQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztJQUFFQyxPQUFPLEVBQUU7RUFBa0IsQ0FBQyxDQUFDO0FBQUEsQ0FDckQsQ0FBQztBQUFBLElBQUFDLFFBQUEsR0FFY3BCLE1BQU07QUFBQXFCLE9BQUEsY0FBQUQsUUFBQSJ9